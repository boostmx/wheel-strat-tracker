// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(cuid())
  firstName  String
  lastName   String
  // Potential login via email later
  email      String      @unique
  bio        String?
  avatarUrl  String?
  isAdmin    Boolean     @default(false)
  username   String      @unique
  password   String
  portfolios Portfolio[]
  createdAt  DateTime    @default(now())
}

model Portfolio {
  id              String   @id @default(cuid())
  name            String
  user            User     @relation(fields: [userId], references: [id])
  userId          String
  trades          Trade[]
  startingCapital Float
  currentCapital  Float
  createdAt       DateTime @default(now())
}

model Trade {
  id                String            @id @default(cuid())
  ticker            String
  strikePrice       Float
  expirationDate    DateTime
  type              TradeType
  contracts         Int
  contractPrice     Float
  entryPrice        Float?
  status            TradeStatus       @default(open)
  closedAt          DateTime?
  closingPrice      Float?
  premiumCaptured   Float?
  percentPL         Float?
  portfolio         Portfolio         @relation(fields: [portfolioId], references: [id], onDelete: Cascade)
  portfolioId       String
  createdAt         DateTime          @default(now())
  notes             String?
  tradeAdjustments  TradeAdjustment[]
}

model TradeAdjustment {
  id        String   @id @default(cuid())
  trade     Trade    @relation(fields: [tradeId], references: [id])
  tradeId   String
  addedAt   DateTime @default(now())
  contracts Int
  price     Float
  notes     String?
}

enum TradeType {
  Put
  Call
  CoveredCall
  CashSecuredPut
}

enum TradeStatus {
  open
  closed
}
